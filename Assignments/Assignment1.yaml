
# Week 1 :

Learning hooks : 

1> useState 
2> useEffect

Ass1 : Set a alert system if the button is pressed for 10 times give an alert and reset it to 0 .

const Counter = () => {
  
    // variable baana na hoo tho bss : 
    const[count, setcount] = useState(0)
    
    
  
    return (
     
     <div>
         <div>Counter</div>
         <p>{`This a counter app for count ${count}`}</p>
          <button
           className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full'
           onClick={()=>{
               
               if(count==10){
                   alert(`count ${count}`)
                   setcount(0)
                }else{
                    setcount(count+1)
               }
            
        }}
           >
            
            Add
            </button>
     </div>   


  )
}

Ass2 : Very basics toggle is used in use effect it renders when it is rendered !! 

const Counter = () => {
  
    // variable baana na hoo tho bss : 
    const[count, setcount] = useState(0)
    const[visible,setvisible] = useState(true)

    useEffect(()=>{
    console.log("rendered !! ")
    return ()=>{
        console.log('Unmounted !! ')
    }
    },[visible])
    
    
  
    return (
     
     <div>
        {(visible)?  <div>
        
         <div>Counter</div>
         <p>{`This a counter app for count ${count}`}</p>
          <button
           className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full'
           onClick={()=>{
               
               if(count==10){
                   alert(`count ${count}`)
                   setcount(0)
                }else{
                    setcount(count+1)
               }
            
        }}
           >
            
            Add
            </button>
        
        </div>
         
         :
         <>
         <h1>Sorry !! Nothing </h1>
         </>
    
        }

            <button  onClick={()=>{
                setvisible(!visible)
                setcount(0)
            }}   className='bg-blue-500 rounded mt-2 ml-5 text-white overflow'> toggle </button>
     </div>   

===============================================================================================================

Task 3 : fetch data from a endpoint : 

import React, { useEffect, useState } from 'react';
import C from './c';


const Counter = () => {
    const [post, setPost] = useState([]); // Changed to single post object instead of array
    const [enter,setenter] = useState(false)


    useEffect(() => {
        const fetchData = async () => {
           
                const response = await fetch(`https://jsonplaceholder.typicode.com/posts`);
                
                const data = await response.json();
                setPost(data);
            
        };

        fetchData();
        console.log(enter)
    }, [enter]);

    return (
        <div>

            {(enter)?<>
            
           
           <C post={post} />
            
            </>:<>
            
            <h1> please  hit enter </h1>

            </> }

            <button
            
            onClick={()=>{
                setenter(!enter)
            }}

            > Enter </button>
        </div>

    );
};

export default Counter;


C.jsx: 

import React from 'react'

const C = ({post}) => {
  return (
    <>
            
    <h1>Post</h1>
    
    {
        post.map((e)=>(
            <div className='mb-5' key={e.id}>
                <h2 className='text-3xl'>{e.title}</h2>
                <p>{e.body}</p>
            </div>
        ))
    }
    
    </>
  )
}

export default C

======================================================================================


Task : Making the search a little more dynamic : 

import React, { useEffect, useState } from 'react';
import C from './c';


const Counter = () => {
    const [post, setPost] = useState([]); // Changed to single post object instead of array
    const [enter,setenter] = useState(false)
    const [search,setsearch]= useState(0)


    useEffect(() => {
        const fetchData = async () => {
           
                const response = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${search}`);
                
                const data = await response.json();
                setPost(data);
            
        };

        fetchData();
        console.log(enter)
    }, [enter]);

    return (
        <div>

            {(enter)?<>
            
           
           <C post={post} />
            
            </>:<>
            
            <h1> please  hit enter </h1>

            <div className='flex flex-col'>
            <textarea 
            onChange={(e)=>{
               setsearch(e.target.value)
            }}
            className='border-black' name="id" id="" placeholder='Enter the id '></textarea>
            </div>
            </>
            
             }

            



            <button

            className='bg-blue-500 rounded w-1/2 mt-4'
            
            onClick={()=>{
                setenter(!enter)
            }}

            > Enter </button>
            

        </div>

    );
};

export default Counter;

==================================================================

Assignment 4 :  Make a timer !! it should alert when no time left !! 

import React, { useEffect, useState } from 'react'

const Timer = ({initialvalue}) => {
   
    const [timeleft,settimeleft] = useState(initialvalue)

    useEffect(()=>{

        if(timeleft==0) {
            alert("you ran out of time ")
            return
        }
       
        const time = setInterval(()=>{
           settimeleft(timeleft-1)
        },1000)

        return function(){
            clearInterval(time)
        }

    },[timeleft])

  return (
     
    <div>
        <div>Timer : {timeleft}</div>
        <button
        onClick={()=>{
            settimeleft(initialvalue)
        }}
       

        > restart </button>
    </div>

  )
}

export default Timer

=========================================================================





